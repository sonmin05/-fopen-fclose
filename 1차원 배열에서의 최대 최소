#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int temp;  // 파일에서 읽어온 값을 저장할 변수
    int A[100];  // 최대 100개의 정수를 저장할 배열
    int n = 0;  // 배열 A에 저장된 정수의 개수를 기록할 변수

    int max = 0, min = 10;  // 초기값을 설정할 변수, max는 최댓값, min은 최솟값
    FILE* fp = fopen("0903.txt", "r");  // "0903.txt" 파일을 읽기 모드로 열고 파일 포인터 fp에 저장

    // 파일 열기에 실패한 경우
    if (fp == NULL)
    {
        printf("파일을 열 수 없습니다.\n");  // 오류 메시지 출력
        return 1;  // 프로그램 종료, 오류 발생을 나타내는 반환값 1
    }

    // 파일에서 데이터를 읽어서 배열 A에 저장
    do
    {
        // 파일에서 정수를 하나 읽어와서 temp에 저장
        if (fscanf(fp, "%d", &temp) == 1)
        {
            if (n < 100)  // 배열의 최대 크기 제한을 초과하지 않도록 검사
            {
                A[n] = temp;  // 읽어온 정수를 배열 A의 n번째 위치에 저장
                n++;  // 배열에 저장된 정수의 개수를 증가
            }
            else
            {
                printf("배열의 최대 크기를 초과했습니다.\n");  // 배열의 크기 초과 경고
                break;  // 반복문 종료
            }
        }
        else break;  // 정수 읽기 실패 시 반복문 종료
    } while (!feof(fp));  // 파일의 끝까지 반복 (feof 함수 사용)

    fclose(fp);  // 파일 포인터를 닫아서 파일 리소스를 해제

    // 배열 A의 값들 중에서 최댓값과 최솟값을 찾기
    for (int i = 0; i < n; ++i)  // 배열 A의 각 원소를 순회
    {
        if (max <= A[i])  // 현재 원소가 max보다 크거나 같으면
        {
            max = A[i];  // max를 현재 원소로 업데이트
        }
        if (min >= A[i])  // 현재 원소가 min보다 작거나 같으면
        {
            min = A[i];  // min을 현재 원소로 업데이트
        }
    }

    // 최댓값과 최솟값을 출력
    printf("최댓값: %d\n", max);  // 최댓값 출력
    printf("최솟값: %d\n", min);  // 최솟값 출력

    return 0;  // 프로그램 정상 종료를 나타내는 반환값 0
}
